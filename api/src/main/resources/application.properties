#logging Properties
logging.level.org.springframework.security=${SPRING_SECURITY_LOG_LEVEL}
logging.level.org.springframework.web=${SPRING_WEB_LOG_LEVEL}
logging.level.ca.bc.gov.educ.studentdatacollection=${APP_LOG_LEVEL}
logging.level.org.springframework.boot.autoconfigure.logging=${SPRING_BOOT_AUTOCONFIG_LOG_LEVEL}
spring.mvc.log-request-details=${SPRING_SHOW_REQUEST_DETAILS}

#DB Properties
spring.datasource.url=${JDBC_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=none

spring.jackson.deserialization.fail-on-unknown-properties=true
spring.security.oauth2.resourceserver.jwt.issuer-uri=${TOKEN_ISSUER_URL}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${TOKEN_ISSUER_URL}/protocol/openid-connect/certs
management.endpoint.metrics.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.prometheus.enabled=true
management.prometheus.metrics.export.enabled=true
spring.jpa.properties.hibernate.generate_statistics=false
spring.datasource.hikari.max-lifetime=120000
spring.jmx.enabled=false
spring.flyway.baseline-on-migrate=true
spring.flyway.table=FLYWAY_SCHEMA_HISTORY
spring.flyway.baseline-version=0
spring.flyway.enabled=true
logging.file.name=/logs/app.log
logging.logback.rollingpolicy.max-file-size=5MB
logging.logback.rollingpolicy.clean-history-on-start=true
logging.logback.rollingpolicy.max-history=1
logging.pattern.file={"time_stamp":"%d{yyyy-MM-dd HH:mm:ss.SSS}","level":"%3p" ,"thread":"%t" ,"class":"%logger{36}","msg":"%replace(%msg){'[\n\r\"]',''}", "exception":"%replace(%rEx{10}){'[\n\r\"]',''}","http_event":%X{httpEvent:-""},"message_event":%X{messageEvent:-""}, "saga_retry":%X{sagaRetry:-""}}%nopex%n
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} | [%5p] | [%t] | [%logger{36}] | [%replace(%msg){'[\n\r\"]',''} %X{httpEvent} %X{messageEvent}] | %replace(%rEx{10}){'[\n\r\"]',''}%nopex%n

#This is required to map long raw, please see below links, even if hibernate documentation mentions {hibernate.dialect.oracle.prefer_longvarbinary}
# this as the property name, it is not correct.
#https://hibernate.atlassian.net/browse/HHH-10345
#https://in.relation.to/2016/02/17/hibernate-orm-508-final-release/
#spring.jpa.properties.hibernate.dialect.oracle.prefer_long_raw=true
#Print the queries
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL}

spring.jpa.open-in-view=false
#This is used to run redis in local without cluster mode, in application-local.properties change this to local
#Add Redis cluster node address. Use follow format -- <code>host:port</code>. since it is a service in OS, we just give one entry.
#Client details to get token to make api calls.
client.id=${CLIENT_ID}
client.secret=${CLIENT_SECRET}
url.token=${TOKEN_URL}

nats.server=${NATS_URL}
nats.maxReconnect=${NATS_MAX_RECONNECT}
nats.connectionName=STUDENT-DATA-COLLECTION-API

spring.data.redis.client-name=STUDENT-DATA-COLLECTION-API
spring.data.redis.repositories.enabled=false
spring.data.redis.client-type=lettuce
initialization.background.enabled=true

threads.min.subscriber=${THREADS_MIN_SUBSCRIBER}
threads.max.subscriber=${THREADS_MAX_SUBSCRIBER}
sagas.max.pending=${SAGAS_MAX_PENDING}
sagas.max.parallel=${SAGAS_MAX_PARALLEL}

#Start collection scheduler properties
cron.scheduled.process.events.start.collection=${CRON_SCHEDULED_START_COLLECTION}
cron.scheduled.process.events.start.collection.lockAtLeastFor=${CRON_SCHEDULED_START_COLLECTION_LOCK_AT_LEAST_FOR}
cron.scheduled.process.events.start.collection.lockAtMostFor=${CRON_SCHEDULED_START_COLLECTION_LOCK_AT_MOST_FOR}

scheduled.jobs.extract.uncompleted.sagas.cron=${SCHEDULED_JOBS_EXTRACT_UNCOMPLETED_SAGAS_CRON}
scheduled.jobs.extract.uncompleted.sagas.cron.lockAtLeastFor=${SCHEDULED_JOBS_EXTRACT_UNCOMPLETED_SAGAS_CRON_LOCK_AT_LEAST_FOR}
scheduled.jobs.extract.uncompleted.sagas.cron.lockAtMostFor=${SCHEDULED_JOBS_EXTRACT_UNCOMPLETED_SAGAS_CRON_LOCK_AT_MOST_FOR}
scheduled.jobs.process.loaded.sdc.students.cron=${SCHEDULED_JOBS_PROCESS_LOADED_SDC_STUDENTS_CRON}
scheduled.jobs.process.loaded.sdc.students.cron.lockAtLeastFor=${SCHEDULED_JOBS_PROCESS_LOADED_SDC_STUDENTS_CRON_LOCK_AT_LEAST_FOR}
scheduled.jobs.process.loaded.sdc.students.cron.lockAtMostFor=${SCHEDULED_JOBS_PROCESS_LOADED_SDC_STUDENTS_CRON_LOCK_AT_MOST_FOR}

url.api.school=${SCHOOL_API_URL}
schedule.jobs.load.school.cron=0 0 0/12 * * *
